{"name":"SkyFilter.Azure","tagline":"Easy creation and fluent combination of Microsoft Azure table filters.","body":"# About\r\nEasy creation and fluent combination of Microsoft Azure table filters.\r\n\r\nAlso available on NuGet (http://www.nuget.org/packages/SkyFilter.Azure/).\r\n\r\nLicensed under the Apache License 2.0 (http://www.apache.org/licenses/LICENSE-2.0.html).\r\n\r\nBuild Status: ![Not available](http://ci.devcrowd.de/app/rest/builds/buildType:OpenSource_SkyFilter_Integration/statusIcon)\r\n\r\n## Creating filters\r\nTo create a filter use the static class `GenerateTableFilter`.\r\n\r\n```csharp\r\nvar filter = GenerateTableFilter.WhereNotEquals(\"RowKey\", Guid.Empty);\r\n\r\n// RowKey ne guid'00000000-0000-0000-0000-000000000000'\r\n```\r\n\r\n## Combining filters\r\nFilters provide three methods to combine them with other filters: `And`, `Or` and `Not`. Those return the combined filter:\r\n\r\n```csharp\r\nvar filter1 = GenerateTableFilter.WhereEqual(\"PartitionKey\", \"hello\");\r\nvar filter2 = GenerateTableFilter.WhereNotEqual(\"RowKey\", Guid.Empty);\r\n\r\nvar combined = filter1.And(filter2);\r\n\r\n// (PartitionKey eq 'hello') and (RowKey ne guid'00000000-0000-0000-0000-000000000000')\r\n```\r\n\r\nYou can group filters logically by combining them:\r\n\r\n```csharp\r\nvar filter1 = GenerateTableFilter.WhereEqual(\"PartitionKey\", \"hello\");\r\nvar filter2 = GenerateTableFilter.WhereNotEqual(\"RowKey\", Guid.Empty);\r\nvar filter3 = GenerateTableFilter.WhereEqual(\"Name\", \"John\");\r\nvar filter4 = GenerateTableFilter.WhereGreaterThanOrEqual(\"Age\", 25);\r\n\r\nvar combined = filter1.And(filter2).And(filter3.Or(filter4));\r\n\r\n// ((PartitionKey eq 'hello') and (RowKey ne guid'00000000-0000-0000-0000-000000000000')) and ((Name eq 'John') or (Age ge 25))\r\n```\r\n\r\n## Using filters\r\nTo use a filter for a table query, get the constructed Azure table query filter condition string with the `AsFilterCondition` property:\r\n\r\n```csharp\r\nvar filter = GenerateTableFilter.WhereNotEquals(\"RowKey\", Guid.Empty);\r\nvar filterCondition = filter1.AsFilterCondition;\r\n\r\nvar query = new TableQuery.Where(filterCondition);\r\n\r\n// \"RowKey ne guid'00000000-0000-0000-0000-000000000000'\"\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}